"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[203],{5430:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>a,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var r=n(4848),i=n(8453);const t={title:"Business Requirements",position:1},o="Business Requirements",d={id:"report/analysis/business-requirements",title:"Business Requirements",description:"Glossary of Terms for the System",source:"@site/docs/report/analysis/business-requirements.md",sourceDirName:"report/analysis",slug:"/report/analysis/business-requirements",permalink:"/anonymous-shard/docs/report/analysis/business-requirements",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Business Requirements",position:1},sidebar:"tutorialSidebar",previous:{title:"Analysis",permalink:"/anonymous-shard/docs/category/analysis"},next:{title:"Functional Requirements",permalink:"/anonymous-shard/docs/report/analysis/functional-requirements"}},l={},c=[{value:"Glossary of Terms for the System",id:"glossary-of-terms-for-the-system",level:2},{value:"Business Requirements",id:"business-requirements-1",level:2},{value:"Provider Node",id:"provider-node",level:2},{value:"1. Joining the Network",id:"1-joining-the-network",level:3},{value:"2. Discovering Nodes",id:"2-discovering-nodes",level:3},{value:"3. Metric Sharing",id:"3-metric-sharing",level:3},{value:"4. Task Receiving",id:"4-task-receiving",level:3},{value:"5. Task Evaluation",id:"5-task-evaluation",level:3},{value:"6. Task Execution",id:"6-task-execution",level:3},{value:"7. Task Result Storage",id:"7-task-result-storage",level:3},{value:"Consumer Node",id:"consumer-node",level:2},{value:"1. Submitting a Task",id:"1-submitting-a-task",level:3},{value:"2. Consulting Task State",id:"2-consulting-task-state",level:3},{value:"3. Retrieving Task Result",id:"3-retrieving-task-result",level:3},{value:"4. Storing Task Result Locally",id:"4-storing-task-result-locally",level:3}];function h(e){const s={em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"business-requirements",children:"Business Requirements"})}),"\n",(0,r.jsx)(s.h2,{id:"glossary-of-terms-for-the-system",children:"Glossary of Terms for the System"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Terms"}),(0,r.jsx)(s.th,{children:"Meaning"}),(0,r.jsx)(s.th,{children:"Synonymous"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Node"}),(0,r.jsx)(s.td,{children:"A participant in the network"}),(0,r.jsx)(s.td,{children:"Peer"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Bootstrap Node"}),(0,r.jsx)(s.td,{children:"A node that helps other nodes to join"}),(0,r.jsx)(s.td,{children:"Seed"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Provider Node"}),(0,r.jsx)(s.td,{children:"A node that performs computations"}),(0,r.jsx)(s.td,{children:"Worker"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Consumer Node"}),(0,r.jsx)(s.td,{children:"A node that submits tasks"}),(0,r.jsx)(s.td,{children:"Client, Submitter"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Domain Event"}),(0,r.jsx)(s.td,{children:"A significant occurrence in the system"}),(0,r.jsx)(s.td,{children:"Event"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Task"}),(0,r.jsx)(s.td,{children:"A computation to be performed"}),(0,r.jsx)(s.td,{children:"Job"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Task Result"}),(0,r.jsx)(s.td,{children:"The output of a computation"}),(0,r.jsx)(s.td,{children:"Output"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Task Type"}),(0,r.jsx)(s.td,{children:"A category of computations or jobs"}),(0,r.jsx)(s.td,{children:"Job Type"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Submission"}),(0,r.jsx)(s.td,{children:"The act of sending a task to the network"}),(0,r.jsx)(s.td,{children:"Request"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Force Submission"}),(0,r.jsx)(s.td,{children:"A task that must be completed"}),(0,r.jsx)(s.td,{children:"Mandatory Task"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Result"}),(0,r.jsx)(s.td,{children:"The output of a computation"}),(0,r.jsx)(s.td,{children:"Output"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Executor"}),(0,r.jsx)(s.td,{children:"A component that performs a specific task type"}),(0,r.jsx)(s.td,{children:"---"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Evaluator"}),(0,r.jsx)(s.td,{children:"A task evaluator based on some criteria"}),(0,r.jsx)(s.td,{children:"---"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Metric"}),(0,r.jsx)(s.td,{children:"Resource usage or performance indicator"}),(0,r.jsx)(s.td,{children:"Resource Metric"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Discovery"}),(0,r.jsx)(s.td,{children:"The process of finding nodes in the network"}),(0,r.jsx)(s.td,{children:"Lookup"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Encryptor"}),(0,r.jsx)(s.td,{children:"A component that encrypts or decrypts data"}),(0,r.jsx)(s.td,{children:"---"})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"business-requirements-1",children:"Business Requirements"}),"\n",(0,r.jsxs)(s.p,{children:["Since the concept behind the system is novel, the design must prioritize\n",(0,r.jsx)(s.strong,{children:"extensibility"})," and ",(0,r.jsx)(s.strong,{children:"scalability"}),", ensuring that modifications and\nenhancements can be made without compromising core functionalities. Defining comprehensive business\nrequirements that incorporate ",(0,r.jsx)(s.strong,{children:"software engineering best practices"})," while maintaining security,\nanonymity, and decentralization has been a challenging task."]}),"\n",(0,r.jsxs)(s.p,{children:["One of the main challenges during the analysis phase was finding a balance between an ",(0,r.jsx)(s.strong,{children:"open and easily extensible system"})," and\na ",(0,r.jsx)(s.strong,{children:"concrete proof of concept"})," that could be implemented within a reasonable timeframe.\nThis was achieved by adhering to software engineering best practices and adopting a ",(0,r.jsx)(s.strong,{children:"DevOps approach"}),",\nas described in the following sections."]}),"\n",(0,r.jsxs)(s.p,{children:["This section is structured into ",(0,r.jsx)(s.strong,{children:"provider"})," and ",(0,r.jsx)(s.strong,{children:"consumer"})," components, using the ",(0,r.jsx)(s.strong,{children:"use case"})," formalism to\ndescribe the requirements."]}),"\n",(0,r.jsx)(s.h2,{id:"provider-node",children:"Provider Node"}),"\n",(0,r.jsx)(s.p,{children:"A provider node performs computations and returns the results to the consumer node that submitted the task. Before doing so, it must join the network and be able to receive tasks."}),"\n",(0,r.jsx)(s.h3,{id:"1-joining-the-network",children:"1. Joining the Network"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Actor:"})," Provider Node"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Precondition:"})," The provider node has been started and knows the address of a bootstrap node."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Post condition:"})," The provider node is part of the network and can receive tasks."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flow:"})," The provider node sends an event message to the bootstrap node to join the network."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Main Success Scenario:"})," The provider node receives a response from the bootstrap node with randomly selected peers and joins the network."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Extensions:"})," If the bootstrap node is unreachable, the provider retries after a set interval or attempts to join through another bootstrap node."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"2-discovering-nodes",children:"2. Discovering Nodes"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Actor:"})," Provider Node"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Precondition:"})," The provider node is part of the network."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Post condition:"})," The provider node knows some peers in the network."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flow:"})," The provider node sends a ",(0,r.jsx)(s.em,{children:"Discover Event"})," at intervals to discover peers, following Distributed Hash Table (DHT) principles."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Main Success Scenario:"})," The provider node receives responses from peers in the network."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Extensions:"})," The provider node fails to discover peers."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"3-metric-sharing",children:"3. Metric Sharing"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Actor:"})," Provider Node"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Precondition:"})," The provider node is part of the network."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Post condition:"})," The provider node has shared its metrics with the network."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flow:"})," The provider node sends a ",(0,r.jsx)(s.em,{children:"Metric Available Event"})," to share its metrics."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Main Success Scenario:"})," The provider node receives an acknowledgment and, if known, peer metrics."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Extensions:"})," The provider node fails to share its metrics and retries after a set interval."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"4-task-receiving",children:"4. Task Receiving"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Actor:"})," Provider Node"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Precondition:"})," The provider node is part of the network."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Post condition:"})," The provider node has received a task."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flow:"})," The provider node receives a ",(0,r.jsx)(s.em,{children:"Task Event"})," from a consumer node."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Main Success Scenario:"})," The provider node receives the task and begins evaluation."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Extensions:"})," The task reception fails, and the task is considered failed."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"5-task-evaluation",children:"5. Task Evaluation"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Actor:"})," Provider Node"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Precondition:"})," The provider node has received a task."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Post condition:"})," The provider knows if it can execute the task."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flow:"})," The provider evaluates the task using a ",(0,r.jsx)(s.em,{children:"Task Evaluator"})," based on a predefined algorithm."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Main Success Scenario:"})," The provider node determines it can execute the task and begins computation."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Extensions:"})," If other peers have better metrics, the provider redirects the task to them, forcing execution."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"6-task-execution",children:"6. Task Execution"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Actor:"})," Provider Node"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Precondition:"})," The provider node has received and evaluated a task."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Post condition:"})," The provider has executed the task, stored the result, and returned the content identifier to the consumer node."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flow:"})," The provider executes the task, stores the result on IPFS, and sends the content identifier to the consumer node."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Main Success Scenario:"})," The provider node successfully starts computation."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Extensions:"})," Task execution fails, and an error is sent to the consumer node."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"7-task-result-storage",children:"7. Task Result Storage"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Actor:"})," Provider Node"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Precondition:"})," The provider node has executed the task and has the result."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Post condition:"})," The result is encrypted and stored on IPFS."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flow:"})," The provider encrypts the result with the consumer\u2019s public key and stores it on IPFS."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Main Success Scenario:"})," The result is securely stored, and the content identifier is sent to the consumer node."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Extensions:"})," The result cannot be stored, and the task is considered failed."]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"consumer-node",children:"Consumer Node"}),"\n",(0,r.jsx)(s.p,{children:"A consumer node submits tasks to the network and retrieves the results. Before submitting a task, it must know at least one peer in the network."}),"\n",(0,r.jsx)(s.h3,{id:"1-submitting-a-task",children:"1. Submitting a Task"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Actor:"})," Consumer Node"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Precondition:"})," The consumer has a task, a generated key pair for encryption, and a provider node address."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Post condition:"})," The task has been submitted to the network."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flow:"})," The consumer sends a ",(0,r.jsx)(s.em,{children:"Task Submission Event"})," with task details and the public key for encryption."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Main Success Scenario:"})," The consumer receives an acknowledgment and the content identifier of the task."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Extensions:"})," The task submission fails, and the consumer retries after a set interval."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"2-consulting-task-state",children:"2. Consulting Task State"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Actor:"})," Consumer Node"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Precondition:"})," The consumer has submitted a task."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Post condition:"})," The consumer knows the state of the task."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flow:"})," The consumer consults the network for task status."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Main Success Scenario:"})," The consumer receives a response with the task state."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"3-retrieving-task-result",children:"3. Retrieving Task Result"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Actor:"})," Consumer Node"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Precondition:"})," The task has been completed, and the content identifier has been received."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Post condition:"})," The consumer has decrypted the result."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flow:"})," The consumer retrieves the task result from IPFS using the content identifier."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Main Success Scenario:"})," The consumer decrypts the result using the private key."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Extensions:"})," The consumer fails to retrieve the result and retries after a set interval."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"4-storing-task-result-locally",children:"4. Storing Task Result Locally"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Actor:"})," Consumer Node"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Precondition:"})," The consumer has retrieved and decrypted the result."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Post condition:"})," The result is stored locally."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flow:"})," The consumer securely stores the result locally."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Main Success Scenario:"})," The result is successfully stored."]}),"\n"]})]})}function a(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);